// Generated by CoffeeScript 1.3.1
(function() {

  Aria.classDefinition({
    $classpath: 'games.common.input.TouchInputRecorder',
    $extends: 'games.common.input.BasicInputRecorder',
    $dependencies: ['aria.utils.Event', 'aria.core.Timer', 'games.shoot.utils.Console', 'games.common.input.DefaultInput'],
    $prototype: {
      start: function() {
        this.$Event.addListener(document, "touchstart", {
          fn: this.onTouchStart,
          scope: this
        });
        return this.$Event.addListener(document, "touchend", {
          fn: this.onToucheEnd,
          scope: this
        });
      },
      stop: function() {
        this.$Event.removeListener(document, "touchstart", {
          fn: this.onTouchStart,
          scope: this
        });
        return this.$Event.removeListener(document, "touchend", {
          fn: this.onToucheEnd,
          scope: this
        });
      },
      onToucheEnd: function(evt) {
        switch (evt.touches.length) {
          case 0:
            return this.getInputByCode('TAP').complete();
          case 1:
            return this.getInputByCode('DOUBLETAP').complete();
        }
      },
      onTouchStart: function(evt) {
        var input;
        if (evt.touches.length === 2) {
          input = new this.$DefaultInput('DOUBLETAP', this._currentGameTime);
        } else if (evt.touches.length === 1) {
          input = new this.$DefaultInput('TAP', this._currentGameTime);
        }
        if (!this.getInputByCode(input.getCode)) {
          return this.addInputAndPrevent(input, evt);
        }
      },
      addInputAndPrevent: function(input, event) {
        var touch;
        this.addInput(input);
        touch = event.targetTouches[0];
        this.$Console.log("" + (input.getCode()) + " : " + event.touches.length + " : " + touch.pageX + " : " + touch.pageY);
        return evt.preventDefault();
      }
    }
  });

}).call(this);
