// Generated by CoffeeScript 1.3.1
(function() {

  Aria.classDefinition({
    $classpath: 'games.common.BaseObject',
    $constructor: function() {
      this.$JsObject.constructor.call(this);
      return this.createShortcutsForDependencies();
    },
    $prototype: {
      createShortcutsForDependencies: function() {
        var classpath, _i, _len, _ref;
        if (!this.constructor.classDefinition.$alreadyCreatedShortcutDep) {
          _ref = this.getDependenciesRec(this);
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            classpath = _ref[_i];
            this.createShortcutForClasspath(classpath);
          }
          return this.constructor.classDefinition.$alreadyCreatedShortcutDep = true;
        }
      },
      getDependenciesRec: function(classObject) {
        var dependencies, superklass;
        dependencies = this.getDependencies(classObject);
        superklass = classObject.constructor.superclass;
        if (superklass) {
          return dependencies.concat(this.getDependenciesRec(superklass));
        } else {
          return dependencies;
        }
      },
      getDependencies: function(classObject) {
        return classObject.constructor.classDefinition.$dependencies || [];
      },
      createShortcutForClasspath: function(classpath) {
        var classname;
        classname = this.extractClassnameFromClasspath(classpath);
        if (!this.constructor.prototype["$" + classname]) {
          return this.constructor.prototype["$" + classname] = Aria.getClassRef(classpath);
        }
      },
      extractClassnameFromClasspath: function(classpath) {
        return classpath.match(/\.([0-9a-z_]+)$/i)[1];
      },
      on: function(object, event, callback) {
        var events;
        events = {};
        events[event] = {
          fn: callback,
          scope: this
        };
        return object.$on(events);
      }
    }
  });

}).call(this);
