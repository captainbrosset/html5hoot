// Generated by CoffeeScript 1.3.1
(function() {

  Aria.classDefinition({
    $classpath: 'games.audio.entity.SoundGenerator',
    $extends: 'games.common.entity.DestroyableEntity',
    $dependencies: ['games.common.sprite.Sprite', 'games.common.sprite.SpriteBuilder', 'games.common.hitbox.SquareHitbox'],
    $constructor: function(x, y) {
      var transform;
      this.x = x;
      this.y = y;
      this.$DestroyableEntity.constructor.call(this);
      transform = {
        angle: -Math.PI / 2,
        scale: {
          x: 1,
          y: 1
        }
      };
      if (this.x > 240) {
        transform.scale.x = -1;
      }
      this.sprite = this.$SpriteBuilder.build('soundGenerator.png', transform);
      this.hitbox = new this.$SquareHitbox(x - 16, y - 16, 32, 32);
      this.context = new webkitAudioContext;
      this.loadSound();
      return this;
    },
    $prototype: {
      draw: function(context) {
        this.sprite.draw(this.x, this.y, context);
        return this.hitbox.draw(context);
      },
      getHitbox: function() {
        return this.hitbox;
      },
      makeNoise: function() {
        var source;
        source = this.context.createBufferSource();
        source.buffer = this.buffer;
        source.connect(this.context.destination);
        return source.noteOn(0);
      },
      loadSound: function() {
        var request, url,
          _this = this;
        request = new XMLHttpRequest;
        url = 'resources/sounds/m4a1.mp3';
        request.open('GET', url, true);
        request.responseType = 'arraybuffer';
        request.onload = function() {
          return _this.context.decodeAudioData(request.response, function(buffer) {
            _this.buffer = buffer;
          }, function() {});
        };
        return request.send();
      }
    }
  });

}).call(this);
